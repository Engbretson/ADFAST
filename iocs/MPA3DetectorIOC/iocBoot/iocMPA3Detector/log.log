"Do Action #2, The PV does not exist. Start the softIOC."
< envPaths
epicsEnvSet("IOC","iocMPA3Detector")
epicsEnvSet("TOP","Z:/epics/synApps_6_0/areaDetector-R3-4/ADFAST/iocs/MPA3DetectorIOC")
epicsEnvSet("ADFAST","Z:/epics/synApps_6_0/areaDetector-R3-4/ADFAST/iocs/MPA3DetectorIOC/../..")
epicsEnvSet("SUPPORT","z:/epics/synApps_6_0")
epicsEnvSet("ASYN","z:/epics/synApps_6_0/asyn-R4-34")
epicsEnvSet("AREA_DETECTOR","z:/epics/synApps_6_0/areaDetector-R3-4")
epicsEnvSet("ADSUPPORT","z:/epics/synApps_6_0/areaDetector-R3-4/ADSupport-R1-6")
epicsEnvSet("ADCORE","z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4")
epicsEnvSet("AUTOSAVE","z:/epics/synApps_6_0/autosave-5-9-20")
epicsEnvSet("BUSY","z:/epics/synApps_6_0/busy-1-7-5")
epicsEnvSet("CALC","z:/epics/synApps_6_0/calc-3-7-1")
epicsEnvSet("SNCSEQ","z:/epics/synApps_6_0/seq-2-2-6")
epicsEnvSet("SSCAN","z:/epics/synApps_6_0/sscan-2-11-1")
epicsEnvSet("DEVIOCSTATS","z:/epics/synApps_6_0/devIocStats-3-1-15")
epicsEnvSet("ALIVE","z:/epics/synApps_6_0/alive-R1-1-0")
epicsEnvSet("MODBUS","z:/epics/synApps_6_0/modbus-R2-11")
epicsEnvSet("EPICS_BASE","z:/epics/base-7.0.2")
errlogInit(20000)
epicsEnvSet("IOC","ioc29iddMPA")
epicsEnvSet("engineer","Engbretson")
epicsEnvSet("location","ID-29-D")
epicsEnvSet("group","ID-29-D")
dbLoadDatabase("Z:/epics/synApps_6_0/areaDetector-R3-4/ADFAST/iocs/MPA3DetectorIOC/dbd/MPA3DetectorApp.dbd")
MPA3DetectorApp_registerRecordDeviceDriver(pdbbase) 
# Prefix for all records
epicsEnvSet("PREFIX", "29iddMPA:")
# The port name for the detector
epicsEnvSet("PORT",   "MCP1")
# The queue size for all plugins
epicsEnvSet("QSIZE",  "20")
# The maximim image width; used for row profiles in the NDPluginStats plugin
epicsEnvSet("XSIZE",  "8")
# The maximim image height; used for column profiles in the NDPluginStats plugin
epicsEnvSet("YSIZE",  "2000")
# The maximum number of time series points in the NDPluginStats plugin
epicsEnvSet("NCHANS", "2048")
# The maximum number of time series points in the NDPluginTimeSeries plugin
epicsEnvSet("TSPOINTS", "2048")
# The maximum number of frames buffered in the NDPluginCircularBuff plugin
epicsEnvSet("CBUFFS", "500")
# The search path for database files
epicsEnvSet("EPICS_DB_INCLUDE_PATH", "z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4/db")
epicsEnvSet("T1", "Sin(x)")
epicsEnvSet("T2", "Cos(x)")
epicsEnvSet("T3", "SquareWave(x)")
epicsEnvSet("T4", "Sawtooth(x)")
epicsEnvSet("T5", "Noise")
epicsEnvSet("T6", "Sin(x)+Cos(x)")
epicsEnvSet("T7", "Sin(x)*Cos(x)")
epicsEnvSet("T8", "SinSums")
asynSetMinTimerPeriod(0.001)
# The EPICS environment variable EPICS_CA_MAX_ARRAY_BYTES needs to be set to a value at least as large
# as the largest image that the standard arrays plugin will send.
# That vlaue is $(XSIZE) * $(YSIZE) * sizeof(FTVL data type) for the FTVL used when loading the NDStdArrays.template file.
# The variable can be set in the environment before running the IOC or it can be set here.
# It is often convenient to set it in the environment outside the IOC to the largest array any client 
# or server will need.  For example 10000000 (ten million) bytes may be enough.
# If it is set here then remember to also set it outside the IOC for any CA clients that need to access the waveform record.  
# Do not set EPICS_CA_MAX_ARRAY_BYTES to a value much larger than that required, because EPICS Channel Access actually
# allocates arrays of this size every time it needs a buffer larger than 16K.
# Uncomment the following line to set it in the IOC.
#epicsEnvSet("EPICS_CA_MAX_ARRAY_BYTES", "10000000")
# Create an ADCimDetector driver
# MPA3DetectorConfig(const char *portName, int numTimePoints, int dataType,
#                      int maxBuffers, int maxMemory, int priority, int stackSize)
MPA3DetectorConfig("MCP1", 2000, 7, 0, 0)
OFF
realtime= 1.00
runtime= 8.07
single_ev= 0.000000
coinc_ev= 667.000000
sglrate= 0.00
coirate= 0.00
range= 1024
prena= 0
roimin= 1
roimax= 1024
nregions= 0
caluse= 0
calpoints= 0
param= 0
offset= 0
xdim= 0
timesh= 0
active= 2
roipreset= 10000
ltpreset= 1000
timeoffs= 0
dwelltime= 0
rtcuse= 0
dac= 0
diguse= 0
digval= 0
rtprena= 1
rtpreset= 1
savedata= 0
autoinc= 0
fmt= 1
sepfmt= 4
sephead= 0
filename= Z:/2019_2/Fanny/mpa/mpa_006.mpa
dbLoadRecords("Z:/epics/synApps_6_0/areaDetector-R3-4/ADFAST/iocs/MPA3DetectorIOC/../../db/MPA3Detector.template",  "P=29iddMPA:,R=det1:,  PORT=MCP1,ADDR=0,TIMEOUT=1")
# Create a standard arrays plugin, set it to get data from ADCSDetector driver.
NDStdArraysConfigure("Image1", 3, 0, "MCP1", 0)
# This creates a waveform large enough for 100000x8 arrays.
dbLoadRecords("NDStdArrays.template", "P=29iddMPA:,R=image1:,PORT=Image1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1,TYPE=Float64,FTVL=DOUBLE,NELEMENTS=800000")
## Load all other plugins using commonPlugins.cmd
< z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4/iocBoot/commonPlugins.cmd
# This is an example file for creating plugins
# It uses the following environment variable macros
# Many of the parameters defined in this file are also in commonPlugins_settings.req so if autosave is being
# use the autosave value will replace the value passed to this file.
# $(PREFIX)      Prefix for all records
# $(PORT)        The port name for the detector.  In autosave.
# $(QSIZE)       The queue size for all plugins.  In autosave.
# $(XSIZE)       The maximum image width; used to set the maximum size for row profiles in the NDPluginStats plugin and 1-D FFT
#                   profiles in NDPluginFFT.
# $(YSIZE)       The maximum image height; used to set the maximum size for column profiles in the NDPluginStats plugin
# $(NCHANS)      The maximum number of time series points in the NDPluginStats, NDPluginROIStats, and NDPluginAttribute plugins
# $(CBUFFS)      The maximum number of frames buffered in the NDPluginCircularBuff plugin
# $(MAX_THREADS) The maximum number of threads for plugins which can run in multiple threads. Defaults to 5.
# Create a netCDF file saving plugin
NDFileNetCDFConfigure("FileNetCDF1", 20, 0, "MCP1", 0)
dbLoadRecords("NDFileNetCDF.template","P=29iddMPA:,R=netCDF1:,PORT=FileNetCDF1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create a TIFF file saving plugin
NDFileTIFFConfigure("FileTIFF1", 20, 0, "MCP1", 0)
dbLoadRecords("NDFileTIFF.template",  "P=29iddMPA:,R=TIFF1:,PORT=FileTIFF1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create a JPEG file saving plugin
NDFileJPEGConfigure("FileJPEG1", 20, 0, "MCP1", 0)
dbLoadRecords("NDFileJPEG.template",  "P=29iddMPA:,R=JPEG1:,PORT=FileJPEG1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create a NeXus file saving plugin
NDFileNexusConfigure("FileNexus1", 20, 0, "MCP1", 0)
dbLoadRecords("NDFileNexus.template", "P=29iddMPA:,R=Nexus1:,PORT=FileNexus1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create an HDF5 file saving plugin
NDFileHDF5Configure("FileHDF1", 20, 0, "MCP1", 0)
dbLoadRecords("NDFileHDF5.template",  "P=29iddMPA:,R=HDF1:,PORT=FileHDF1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create a Magick file saving plugin
NDFileMagickConfigure("FileMagick1", 20, 0, "MCP1", 0)
dbLoadRecords("NDFileMagick.template","P=29iddMPA:,R=Magick1:,PORT=FileMagick1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create 4 ROI plugins
NDROIConfigure("ROI1", 20, 0, "MCP1", 0, 0, 0, 0, 0, 5)
dbLoadRecords("NDROI.template",       "P=29iddMPA:,R=ROI1:,  PORT=ROI1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
NDROIConfigure("ROI2", 20, 0, "MCP1", 0, 0, 0, 0, 0, 5)
dbLoadRecords("NDROI.template",       "P=29iddMPA:,R=ROI2:,  PORT=ROI2,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
NDROIConfigure("ROI3", 20, 0, "MCP1", 0, 0, 0, 0, 0, 5)
dbLoadRecords("NDROI.template",       "P=29iddMPA:,R=ROI3:,  PORT=ROI3,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
NDROIConfigure("ROI4", 20, 0, "MCP1", 0, 0, 0, 0, 0, 5)
dbLoadRecords("NDROI.template",       "P=29iddMPA:,R=ROI4:,  PORT=ROI4,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create 8 ROIStat plugins
NDROIStatConfigure("ROISTAT1", 20, 0, "MCP1", 0, 8, 0, 0, 0, 0, 5)
dbLoadRecords("NDROIStat.template",   "P=29iddMPA:,R=ROIStat1:  ,PORT=ROISTAT1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1,NCHANS=2048")
dbLoadRecords("NDROIStatN.template",  "P=29iddMPA:,R=ROIStat1:1:,PORT=ROISTAT1,ADDR=0,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDROIStatN.template",  "P=29iddMPA:,R=ROIStat1:2:,PORT=ROISTAT1,ADDR=1,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDROIStatN.template",  "P=29iddMPA:,R=ROIStat1:3:,PORT=ROISTAT1,ADDR=2,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDROIStatN.template",  "P=29iddMPA:,R=ROIStat1:4:,PORT=ROISTAT1,ADDR=3,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDROIStatN.template",  "P=29iddMPA:,R=ROIStat1:5:,PORT=ROISTAT1,ADDR=4,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDROIStatN.template",  "P=29iddMPA:,R=ROIStat1:6:,PORT=ROISTAT1,ADDR=5,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDROIStatN.template",  "P=29iddMPA:,R=ROIStat1:7:,PORT=ROISTAT1,ADDR=6,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDROIStatN.template",  "P=29iddMPA:,R=ROIStat1:8:,PORT=ROISTAT1,ADDR=7,TIMEOUT=1,NCHANS=2048")
# Create a processing plugin
NDProcessConfigure("PROC1", 20, 0, "MCP1", 0, 0, 0)
dbLoadRecords("NDProcess.template",   "P=29iddMPA:,R=Proc1:,  PORT=PROC1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create a TIFF file plugin to read dark and flatfield images into the processing plugin
NDFileTIFFConfigure("PROC1TIFF", 20, 0, "MCP1", 0)
dbLoadRecords("NDFileTIFF.template",  "P=29iddMPA:,R=Proc1:TIFF:,PORT=PROC1TIFF,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create a scatter plugin
NDScatterConfigure("SCATTER1", 20, 0, "MCP1", 0, 0, 0)
dbLoadRecords("NDScatter.template",   "P=29iddMPA:,R=Scatter1:,  PORT=SCATTER1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create a gather plugin with 8 ports
NDGatherConfigure("GATHER1", 20, 0, 8, 0, 0)
dbLoadRecords("NDGather.template",   "P=29iddMPA:,R=Gather1:, PORT=GATHER1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
dbLoadRecords("NDGatherN.template",   "P=29iddMPA:,R=Gather1:, N=1, PORT=GATHER1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
dbLoadRecords("NDGatherN.template",   "P=29iddMPA:,R=Gather1:, N=2, PORT=GATHER1,ADDR=1,TIMEOUT=1,NDARRAY_PORT=MCP1")
dbLoadRecords("NDGatherN.template",   "P=29iddMPA:,R=Gather1:, N=3, PORT=GATHER1,ADDR=2,TIMEOUT=1,NDARRAY_PORT=MCP1")
dbLoadRecords("NDGatherN.template",   "P=29iddMPA:,R=Gather1:, N=4, PORT=GATHER1,ADDR=3,TIMEOUT=1,NDARRAY_PORT=MCP1")
dbLoadRecords("NDGatherN.template",   "P=29iddMPA:,R=Gather1:, N=5, PORT=GATHER1,ADDR=4,TIMEOUT=1,NDARRAY_PORT=MCP1")
dbLoadRecords("NDGatherN.template",   "P=29iddMPA:,R=Gather1:, N=6, PORT=GATHER1,ADDR=5,TIMEOUT=1,NDARRAY_PORT=MCP1")
dbLoadRecords("NDGatherN.template",   "P=29iddMPA:,R=Gather1:, N=7, PORT=GATHER1,ADDR=6,TIMEOUT=1,NDARRAY_PORT=MCP1")
dbLoadRecords("NDGatherN.template",   "P=29iddMPA:,R=Gather1:, N=8, PORT=GATHER1,ADDR=7,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create 5 statistics plugins
NDStatsConfigure("STATS1", 20, 0, "MCP1", 0, 0, 0, 0, 0, 5)
dbLoadRecords("NDStats.template",     "P=29iddMPA:,R=Stats1:,  PORT=STATS1,ADDR=0,TIMEOUT=1,HIST_SIZE=256,XSIZE=8,YSIZE=2000,NCHANS=2048,NDARRAY_PORT=MCP1")
NDTimeSeriesConfigure("STATS1_TS", 20, 0, "STATS1", 1, 23)
dbLoadRecords("z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4/db/NDTimeSeries.template",  "P=29iddMPA:,R=Stats1:TS:, PORT=STATS1_TS,ADDR=0,TIMEOUT=1,NDARRAY_PORT=STATS1,NDARRAY_ADDR=1,NCHANS=2048,ENABLED=1")
NDStatsConfigure("STATS2", 20, 0, "ROI1",    0, 0, 0, 0, 0, 5)
dbLoadRecords("NDStats.template",     "P=29iddMPA:,R=Stats2:,  PORT=STATS2,ADDR=0,TIMEOUT=1,HIST_SIZE=256,XSIZE=8,YSIZE=2000,NCHANS=2048,NDARRAY_PORT=MCP1")
NDTimeSeriesConfigure("STATS2_TS", 20, 0, "STATS2", 1, 23)
dbLoadRecords("z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4/db/NDTimeSeries.template",  "P=29iddMPA:,R=Stats2:TS:, PORT=STATS2_TS,ADDR=0,TIMEOUT=1,NDARRAY_PORT=STATS2,NDARRAY_ADDR=1,NCHANS=2048,ENABLED=1")
NDStatsConfigure("STATS3", 20, 0, "ROI2",    0, 0, 0, 0, 0, 5)
dbLoadRecords("NDStats.template",     "P=29iddMPA:,R=Stats3:,  PORT=STATS3,ADDR=0,TIMEOUT=1,HIST_SIZE=256,XSIZE=8,YSIZE=2000,NCHANS=2048,NDARRAY_PORT=MCP1")
NDTimeSeriesConfigure("STATS3_TS", 20, 0, "STATS3", 1, 23)
dbLoadRecords("z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4/db/NDTimeSeries.template",  "P=29iddMPA:,R=Stats3:TS:, PORT=STATS3_TS,ADDR=0,TIMEOUT=1,NDARRAY_PORT=STATS3,NDARRAY_ADDR=1,NCHANS=2048,ENABLED=1")
NDStatsConfigure("STATS4", 20, 0, "ROI3",    0, 0, 0, 0, 0, 5)
dbLoadRecords("NDStats.template",     "P=29iddMPA:,R=Stats4:,  PORT=STATS4,ADDR=0,TIMEOUT=1,HIST_SIZE=256,XSIZE=8,YSIZE=2000,NCHANS=2048,NDARRAY_PORT=MCP1")
NDTimeSeriesConfigure("STATS4_TS", 20, 0, "STATS4", 1, 23)
dbLoadRecords("z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4/db/NDTimeSeries.template",  "P=29iddMPA:,R=Stats4:TS:, PORT=STATS4_TS,ADDR=0,TIMEOUT=1,NDARRAY_PORT=STATS4,NDARRAY_ADDR=1,NCHANS=2048,ENABLED=1")
NDStatsConfigure("STATS5", 20, 0, "ROI4",    0, 0, 0, 0, 0, 5)
dbLoadRecords("NDStats.template",     "P=29iddMPA:,R=Stats5:,  PORT=STATS5,ADDR=0,TIMEOUT=1,HIST_SIZE=256,XSIZE=8,YSIZE=2000,NCHANS=2048,NDARRAY_PORT=MCP1")
NDTimeSeriesConfigure("STATS5_TS", 20, 0, "STATS5", 1, 23)
dbLoadRecords("z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4/db/NDTimeSeries.template",  "P=29iddMPA:,R=Stats5:TS:, PORT=STATS5_TS,ADDR=0,TIMEOUT=1,NDARRAY_PORT=STATS5,NDARRAY_ADDR=1,NCHANS=2048,ENABLED=1")
# Create a transform plugin
NDTransformConfigure("TRANS1", 20, 0, "MCP1", 0, 0, 0, 0, 0, 5)
dbLoadRecords("NDTransform.template", "P=29iddMPA:,R=Trans1:,  PORT=TRANS1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create an overlay plugin with 8 overlays
NDOverlayConfigure("OVER1", 20, 0, "MCP1", 0, 8, 0, 0, 0, 0, 5)
dbLoadRecords("NDOverlay.template", "P=29iddMPA:,R=Over1:, PORT=OVER1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
dbLoadRecords("NDOverlayN.template","P=29iddMPA:,R=Over1:1:,NAME=ROI1,   SHAPE=1,O=Over1:,XPOS=29iddMPA:ROI1:MinX_RBV,YPOS=29iddMPA:ROI1:MinY_RBV,XSIZE=29iddMPA:ROI1:SizeX_RBV,YSIZE=29iddMPA:ROI1:SizeY_RBV,PORT=OVER1,ADDR=0,TIMEOUT=1")
dbLoadRecords("NDOverlayN.template","P=29iddMPA:,R=Over1:2:,NAME=ROI2,   SHAPE=1,O=Over1:,XPOS=29iddMPA:ROI2:MinX_RBV,YPOS=29iddMPA:ROI2:MinY_RBV,XSIZE=29iddMPA:ROI2:SizeX_RBV,YSIZE=29iddMPA:ROI2:SizeY_RBV,PORT=OVER1,ADDR=1,TIMEOUT=1")
dbLoadRecords("NDOverlayN.template","P=29iddMPA:,R=Over1:3:,NAME=ROI3,   SHAPE=1,O=Over1:,XPOS=29iddMPA:ROI3:MinX_RBV,YPOS=29iddMPA:ROI3:MinY_RBV,XSIZE=29iddMPA:ROI3:SizeX_RBV,YSIZE=29iddMPA:ROI3:SizeY_RBV,PORT=OVER1,ADDR=2,TIMEOUT=1")
dbLoadRecords("NDOverlayN.template","P=29iddMPA:,R=Over1:4:,NAME=ROI4,   SHAPE=1,O=Over1:,XPOS=29iddMPA:ROI4:MinX_RBV,YPOS=29iddMPA:ROI4:MinY_RBV,XSIZE=29iddMPA:ROI4:SizeX_RBV,YSIZE=29iddMPA:ROI4:SizeY_RBV,PORT=OVER1,ADDR=3,TIMEOUT=1")
dbLoadRecords("NDOverlayN.template","P=29iddMPA:,R=Over1:5:,NAME=Cursor1,SHAPE=1,O=Over1:,XPOS=junk,                  YPOS=junk,                  XSIZE=junk,                   YSIZE=junk,                   PORT=OVER1,ADDR=4,TIMEOUT=1")
dbLoadRecords("NDOverlayN.template","P=29iddMPA:,R=Over1:6:,NAME=Cursor2,SHAPE=1,O=Over1:,XPOS=junk,                  YPOS=junk,                  XSIZE=junk,                   YSIZE=junk,                   PORT=OVER1,ADDR=5,TIMEOUT=1")
dbLoadRecords("NDOverlayN.template","P=29iddMPA:,R=Over1:7:,NAME=Box1,   SHAPE=1,O=Over1:,XPOS=junk,                  YPOS=junk,                  XSIZE=junk,                   YSIZE=junk,                   PORT=OVER1,ADDR=6,TIMEOUT=1")
dbLoadRecords("NDOverlayN.template","P=29iddMPA:,R=Over1:8:,NAME=Box2,   SHAPE=1,O=Over1:,XPOS=junk,                  YPOS=junk,                  XSIZE=junk,                   YSIZE=junk,                   PORT=OVER1,ADDR=7,TIMEOUT=1")
# Create 2 color conversion plugins
NDColorConvertConfigure("CC1", 20, 0, "MCP1", 0, 0, 0, 0, 0, 5)
dbLoadRecords("NDColorConvert.template", "P=29iddMPA:,R=CC1:,  PORT=CC1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
NDColorConvertConfigure("CC2", 20, 0, "MCP1", 0, 0, 0, 0, 0, 5)
dbLoadRecords("NDColorConvert.template", "P=29iddMPA:,R=CC2:,  PORT=CC2,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create a circular buffer plugin
NDCircularBuffConfigure("CB1", 20, 0, "MCP1", 0, 500, 0)
dbLoadRecords("NDCircularBuff.template", "P=29iddMPA:,R=CB1:,  PORT=CB1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Create an NDAttribute plugin with 8 attributes
NDAttrConfigure("ATTR1", 20, 0, "MCP1", 0, 8, 0, 0, 0)
dbLoadRecords("NDAttribute.template",  "P=29iddMPA:,R=Attr1:,    PORT=ATTR1,ADDR=0,TIMEOUT=1,NCHANS=2048,NDARRAY_PORT=MCP1")
dbLoadRecords("NDAttributeN.template", "P=29iddMPA:,R=Attr1:1:,  PORT=ATTR1,ADDR=0,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDAttributeN.template", "P=29iddMPA:,R=Attr1:2:,  PORT=ATTR1,ADDR=1,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDAttributeN.template", "P=29iddMPA:,R=Attr1:3:,  PORT=ATTR1,ADDR=2,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDAttributeN.template", "P=29iddMPA:,R=Attr1:4:,  PORT=ATTR1,ADDR=3,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDAttributeN.template", "P=29iddMPA:,R=Attr1:5:,  PORT=ATTR1,ADDR=4,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDAttributeN.template", "P=29iddMPA:,R=Attr1:6:,  PORT=ATTR1,ADDR=5,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDAttributeN.template", "P=29iddMPA:,R=Attr1:7:,  PORT=ATTR1,ADDR=6,TIMEOUT=1,NCHANS=2048")
dbLoadRecords("NDAttributeN.template", "P=29iddMPA:,R=Attr1:8:,  PORT=ATTR1,ADDR=7,TIMEOUT=1,NCHANS=2048")
# Create an FFT plugin
NDFFTConfigure("FFT1", 3, 0, "MCP1", 0, 0, 0, 0, 0, 5)
dbLoadRecords("NDFFT.template", "P=29iddMPA:, R=FFT1:, PORT=FFT1, ADDR=0, TIMEOUT=1, NDARRAY_PORT=MCP1, NAME=FFT1, NCHANS=8")
set_requestfile_path("./")
set_requestfile_path("z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4/ADApp/Db")
set_requestfile_path("z:/epics/synApps_6_0/areaDetector-R3-4/ADCore-R3-4/iocBoot")
set_savefile_path("./autosave")
set_pass0_restoreFile("auto_settings.sav")
set_pass1_restoreFile("auto_settings.sav")
save_restoreSet_status_prefix("29iddMPA:")
dbLoadRecords("z:/epics/synApps_6_0/autosave-5-9-20/asApp/Db/save_restoreStatus.db", "P=29iddMPA:")
# Optional: load NDPluginPva plugin
NDPvaConfigure("PVA1", 20, 0, "MCP1", 0, 29iddMPA:Pva1:Image, 0, 0, 0)
dbLoadRecords("NDPva.template",  "P=29iddMPA:,R=Pva1:, PORT=PVA1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=MCP1")
# Must start PVA server if this is enabled
startPVAServer
# Optional: load NDPluginEdge plugin
#NDEdgeConfigure("EDGE1", $(QSIZE), 0, "$(PORT)", 0, 0, 0, 0)
#dbLoadRecords("$(ADPLUGINEDGE)/db/NDEdge.template",  "P=$(PREFIX),R=Edge1:, PORT=EDGE1,ADDR=0,TIMEOUT=1,NDARRAY_PORT=$(PORT)")
#set_requestfile_path("$(ADPLUGINEDGE)/edgeApp/Db")
# Optional: load scan records
dbLoadRecords("z:/epics/synApps_6_0/sscan-2-11-1/sscanApp/Db/scan.db", "P=29iddMPA:,MAXPTS1=2000,MAXPTS2=200,MAXPTS3=20,MAXPTS4=10,MAXPTSH=10")
set_requestfile_path("z:/epics/synApps_6_0/sscan-2-11-1/sscanApp/Db")
# Optional: load sseq record for acquisition sequence
dbLoadRecords("z:/epics/synApps_6_0/calc-3-7-1/calcApp/Db/sseqRecord.db", "P=29iddMPA:, S=AcquireSequence")
set_requestfile_path("z:/epics/synApps_6_0/calc-3-7-1/calcApp/Db")
# Optional: load devIocStats records (requires DEVIOCSTATS module)
dbLoadRecords("z:/epics/synApps_6_0/devIocStats-3-1-15/db/iocAdminSoft.db", "IOC=29iddMPA:")
# Optional: load alive record (requires ALIVE module)
#dbLoadRecords("$(ALIVE)/aliveApp/Db/alive.db", "P=$(PREFIX),RHOST=192.168.1.254")
dbLoadRecords("z:/epics/synApps_6_0/alive-R1-1-0/aliveApp/Db/alive.db", "P=29iddMPA:,RHOST=164.54.100.11")
set_requestfile_path("Z:/epics/synApps_6_0/areaDetector-R3-4/ADFAST/iocs/MPA3DetectorIOC/../../FASTApp/Db")
#asynSetTraceIOMask("$(PORT)",0,2)
#asynSetTraceMask("$(PORT)",0,255)
< modbus.cmd
#modbus.cmd
# Use the following commands for TCP/IP
#drvAsynIPPortConfigure(const char *portName, 
#                       const char *hostInfo,
#                       unsigned int priority, 
#                       int noAutoConnect,
#                       int noProcessEos);
drvAsynIPPortConfigure("DL06","164.54.118.35:502",0,1,1)
#drvAsynIPPortConfigure("DL06","164.54.53.200:502",0,1,1)
#modbusInterposeConfig(const char *portName, 
#                      modbusLinkType linkType,
#                      int timeoutMsec,
#                      int writeDelayMsec)
modbusInterposeConfig("DL06",0,5000,10)
# I want no messages from this sucker
asynSetTraceMask("DL06", 0, 0)
#       numbers (no leading zero) or hex numbers can also be used.
# The 440 has bit access to the Xn inputs at Modbus offset 4000 (octal)
# Read bits (X0-X23).  Function code=2.
drvModbusAsynConfigure("X_Bits",      "DL06", 0, 2,  04000, 024,    0,  100, "Koyo")
# The 440 has bit access to the Yn outputs at Modbus offset 4000 (octal)
# Read bits (Y0-Y17).  Function code=1.
drvModbusAsynConfigure("Y_Bits",   "DL06", 0, 1,  04000, 020,    0,  100, "Koyo")
# The 440 has bit access to the Cn bits at Modbus offset 6000 (octal)
# Access 1024 bits (C0-C1777) as inputs.  Function code=1.
drvModbusAsynConfigure("C_Bits",   "DL06", 0, 1,  06000, 02000,   0,  100, "Koyo")
# The 440 has bit access to the Cn bits at Modbus offset 6000 (octal)
# Access 1024 bits (C0-C1777) as outputs.  Function code=5.
drvModbusAsynConfigure("C_Bits_Out",   "DL06", 0, 5,  06000, 02000,   0,  1, "Koyo")
# various blocks of V locations, function code=3.
drvModbusAsynConfigure("V400", "DL06", 0, 3, 0400, 020,    0, 100,  "Koyo")
drvModbusAsynConfigure("V500", "DL06", 0, 3, 0500, 012,    2, 100,  "Koyo")
drvModbusAsynConfigure("V514", "DL06", 0, 3, 0514, 010,    7, 100,  "Koyo")
# Access 1024 bits (SP0-SP777) as inputs.  Function code=2.
# used for hearbeats and to confirm that the plc is actually running.
drvModbusAsynConfigure("SP_Bits",   "DL06", 0, 2,  06000, 01000,   0,  100, "Koyo")
dbLoadTemplate("modbus.substitutions")
iocInit()
############################################################################
## EPICS R7.0.2
## EPICS Base built Jan  8 2019
############################################################################
recDynLinkOut: waiting for CA context
recDynLinkOut: got CA context
autoinc=0
savedata=0
rtprena=1
rtpreset=1.000
# save things every thirty seconds
create_monitor_set("auto_settings.req", 30, "P=29iddMPA:")
epics> auto_settings.sav: 2743 of 2743 PV's connected
epics> Press any key to continue . . . 
